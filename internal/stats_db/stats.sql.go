// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: stats.sql

package sq

import (
	"context"
	"time"
)

const insertAccepted = `-- name: InsertAccepted :exec
INSERT INTO accepted (email, message_id) VALUES ($1, $2)
`

type InsertAcceptedParams struct {
	Email     string
	MessageID string
}

func (q *Queries) InsertAccepted(ctx context.Context, arg InsertAcceptedParams) error {
	_, err := q.exec(ctx, q.insertAcceptedStmt, insertAccepted, arg.Email, arg.MessageID)
	return err
}

const insertBounced = `-- name: InsertBounced :exec
INSERT INTO bounced (email, message_id, err_code, err_msg, timestamp) VALUES ($1, $2, $3, $4, $5)
`

type InsertBouncedParams struct {
	Email     string
	MessageID string
	ErrCode   int32
	ErrMsg    string
	Timestamp time.Time
}

func (q *Queries) InsertBounced(ctx context.Context, arg InsertBouncedParams) error {
	_, err := q.exec(ctx, q.insertBouncedStmt, insertBounced,
		arg.Email,
		arg.MessageID,
		arg.ErrCode,
		arg.ErrMsg,
		arg.Timestamp,
	)
	return err
}

const insertDelivered = `-- name: InsertDelivered :exec
INSERT INTO delivered (email, message_id, timestamp) VALUES ($1, $2, $3)
`

type InsertDeliveredParams struct {
	Email     string
	MessageID string
	Timestamp time.Time
}

func (q *Queries) InsertDelivered(ctx context.Context, arg InsertDeliveredParams) error {
	_, err := q.exec(ctx, q.insertDeliveredStmt, insertDelivered, arg.Email, arg.MessageID, arg.Timestamp)
	return err
}
