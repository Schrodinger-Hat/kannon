// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// UnsafeMailerServer is an autogenerated mock type for the UnsafeMailerServer type
type UnsafeMailerServer struct {
	mock.Mock
}

type UnsafeMailerServer_Expecter struct {
	mock *mock.Mock
}

func (_m *UnsafeMailerServer) EXPECT() *UnsafeMailerServer_Expecter {
	return &UnsafeMailerServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedMailerServer provides a mock function with given fields:
func (_m *UnsafeMailerServer) mustEmbedUnimplementedMailerServer() {
	_m.Called()
}

// UnsafeMailerServer_mustEmbedUnimplementedMailerServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedMailerServer'
type UnsafeMailerServer_mustEmbedUnimplementedMailerServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedMailerServer is a helper method to define mock.On call
func (_e *UnsafeMailerServer_Expecter) mustEmbedUnimplementedMailerServer() *UnsafeMailerServer_mustEmbedUnimplementedMailerServer_Call {
	return &UnsafeMailerServer_mustEmbedUnimplementedMailerServer_Call{Call: _e.mock.On("mustEmbedUnimplementedMailerServer")}
}

func (_c *UnsafeMailerServer_mustEmbedUnimplementedMailerServer_Call) Run(run func()) *UnsafeMailerServer_mustEmbedUnimplementedMailerServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *UnsafeMailerServer_mustEmbedUnimplementedMailerServer_Call) Return() *UnsafeMailerServer_mustEmbedUnimplementedMailerServer_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewUnsafeMailerServer interface {
	mock.TestingT
	Cleanup(func())
}

// NewUnsafeMailerServer creates a new instance of UnsafeMailerServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUnsafeMailerServer(t mockConstructorTestingTNewUnsafeMailerServer) *UnsafeMailerServer {
	mock := &UnsafeMailerServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
